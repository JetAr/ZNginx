#version 400

layout(location=0) in vec4 in_Position;
layout(location=1) in vec4 in_Color;

uniform mat4 projectionMatrix;  
uniform mat4 viewMatrix;  
uniform mat4 modelMatrix;  

out vec4 frag_Color;

void main(void)
{
	gl_Position = projectionMatrix * viewMatrix * modelMatrix * in_Position;
	frag_Color = in_Color;
}


/////////////////////////////////////////////////////////////////////////////////
//
// * QUICK NOTES * 
//
// We added the ability to take in the projection, view and model matrices so
// that we can calculate the positions correctly and they will render properly
// in screen space according to our camera and projection.  The uniform keyword
// creates as global variable that doesn't change between a render cycle, and
// they are constant and can't be changed.  The mat4 variables are 4x4 matrices.
// To calculate the 3D projected vertices, we use the formula:
// 
// Position = projectionMatrix * viewMatrix * modelMatrix * vertex; 
//
// As a reminder, the order is important and we go from the right to the left.
//
//
// © 2000-2014 GameTutorials