//--------------------------------------------------------------------------------
// This file is a portion of the Hieroglyph 3 Rendering Engine.  It is distributed
// under the MIT License, available in the root of this distribution and
// at the following URL:
//
// http://www.opensource.org/licenses/mit-license.php
//
// Copyright (c) Jason Zink
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
#include "PCH.h"
#include "Plane3f.h"
//--------------------------------------------------------------------------------
using namespace Glyph3;
//--------------------------------------------------------------------------------
Plane3f::Plane3f()
{
    m_fComponents[0] = 0.0f;
    m_fComponents[1] = 0.0f;
    m_fComponents[2] = 0.0f;
    m_fComponents[3] = 0.0f;
}
//--------------------------------------------------------------------------------
Plane3f::Plane3f(float a, float b, float c, float d)
{
    m_fComponents[0] = a;
    m_fComponents[1] = b;
    m_fComponents[2] = c;
    m_fComponents[3] = d;
}
//--------------------------------------------------------------------------------
Plane3f::~Plane3f()
{
}
//--------------------------------------------------------------------------------
void Plane3f::Normalize()
{
    float fMagnitude = sqrt(A*A + B*B + C*C);

    for (int i = 0; i < 4; i++)
    {
        m_fComponents[i] /= fMagnitude;
    }
}
//--------------------------------------------------------------------------------
float Plane3f::DistanceToPoint( const Vector3f& pt ) const
{
    return (A * pt.x +
            B * pt.y +
            C * pt.z +
            D);
}
//--------------------------------------------------------------------------------
float Plane3f::a() const
{
    return(A);
}
//--------------------------------------------------------------------------------
float& Plane3f::a()
{
    return(A);
}
//--------------------------------------------------------------------------------
float Plane3f::b() const
{
    return(B);
}
//--------------------------------------------------------------------------------
float& Plane3f::b()
{
    return(B);
}
//--------------------------------------------------------------------------------
float Plane3f::c() const
{
    return(C);
}
//--------------------------------------------------------------------------------
float& Plane3f::c()
{
    return(C);
}
//--------------------------------------------------------------------------------
float Plane3f::d() const
{
    return(D);
}
//--------------------------------------------------------------------------------
float& Plane3f::d()
{
    return(D);
}
//--------------------------------------------------------------------------------
eSHAPE Plane3f::GetShapeType( ) const
{
    return( PLANE );
}
//--------------------------------------------------------------------------------
